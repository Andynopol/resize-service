/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface KeepBounderies {
    }
    interface MaxSize {
    }
    interface MinSize {
    }
    interface ResizeConfigs {
    }
    interface ResizeDedicatedRules {
    }
    interface ResizeDisplayOptions {
    }
    interface ResizeFunctions {
    }
    interface ResizeGlobalRules {
    }
    interface ResizeHorizontal {
    }
    interface ResizeVertical {
    }
    interface WtfIsThis {
    }
}
declare global {
    interface HTMLKeepBounderiesElement extends Components.KeepBounderies, HTMLStencilElement {
    }
    var HTMLKeepBounderiesElement: {
        prototype: HTMLKeepBounderiesElement;
        new (): HTMLKeepBounderiesElement;
    };
    interface HTMLMaxSizeElement extends Components.MaxSize, HTMLStencilElement {
    }
    var HTMLMaxSizeElement: {
        prototype: HTMLMaxSizeElement;
        new (): HTMLMaxSizeElement;
    };
    interface HTMLMinSizeElement extends Components.MinSize, HTMLStencilElement {
    }
    var HTMLMinSizeElement: {
        prototype: HTMLMinSizeElement;
        new (): HTMLMinSizeElement;
    };
    interface HTMLResizeConfigsElement extends Components.ResizeConfigs, HTMLStencilElement {
    }
    var HTMLResizeConfigsElement: {
        prototype: HTMLResizeConfigsElement;
        new (): HTMLResizeConfigsElement;
    };
    interface HTMLResizeDedicatedRulesElement extends Components.ResizeDedicatedRules, HTMLStencilElement {
    }
    var HTMLResizeDedicatedRulesElement: {
        prototype: HTMLResizeDedicatedRulesElement;
        new (): HTMLResizeDedicatedRulesElement;
    };
    interface HTMLResizeDisplayOptionsElement extends Components.ResizeDisplayOptions, HTMLStencilElement {
    }
    var HTMLResizeDisplayOptionsElement: {
        prototype: HTMLResizeDisplayOptionsElement;
        new (): HTMLResizeDisplayOptionsElement;
    };
    interface HTMLResizeFunctionsElement extends Components.ResizeFunctions, HTMLStencilElement {
    }
    var HTMLResizeFunctionsElement: {
        prototype: HTMLResizeFunctionsElement;
        new (): HTMLResizeFunctionsElement;
    };
    interface HTMLResizeGlobalRulesElement extends Components.ResizeGlobalRules, HTMLStencilElement {
    }
    var HTMLResizeGlobalRulesElement: {
        prototype: HTMLResizeGlobalRulesElement;
        new (): HTMLResizeGlobalRulesElement;
    };
    interface HTMLResizeHorizontalElement extends Components.ResizeHorizontal, HTMLStencilElement {
    }
    var HTMLResizeHorizontalElement: {
        prototype: HTMLResizeHorizontalElement;
        new (): HTMLResizeHorizontalElement;
    };
    interface HTMLResizeVerticalElement extends Components.ResizeVertical, HTMLStencilElement {
    }
    var HTMLResizeVerticalElement: {
        prototype: HTMLResizeVerticalElement;
        new (): HTMLResizeVerticalElement;
    };
    interface HTMLWtfIsThisElement extends Components.WtfIsThis, HTMLStencilElement {
    }
    var HTMLWtfIsThisElement: {
        prototype: HTMLWtfIsThisElement;
        new (): HTMLWtfIsThisElement;
    };
    interface HTMLElementTagNameMap {
        "keep-bounderies": HTMLKeepBounderiesElement;
        "max-size": HTMLMaxSizeElement;
        "min-size": HTMLMinSizeElement;
        "resize-configs": HTMLResizeConfigsElement;
        "resize-dedicated-rules": HTMLResizeDedicatedRulesElement;
        "resize-display-options": HTMLResizeDisplayOptionsElement;
        "resize-functions": HTMLResizeFunctionsElement;
        "resize-global-rules": HTMLResizeGlobalRulesElement;
        "resize-horizontal": HTMLResizeHorizontalElement;
        "resize-vertical": HTMLResizeVerticalElement;
        "wtf-is-this": HTMLWtfIsThisElement;
    }
}
declare namespace LocalJSX {
    interface KeepBounderies {
    }
    interface MaxSize {
    }
    interface MinSize {
    }
    interface ResizeConfigs {
    }
    interface ResizeDedicatedRules {
    }
    interface ResizeDisplayOptions {
    }
    interface ResizeFunctions {
    }
    interface ResizeGlobalRules {
    }
    interface ResizeHorizontal {
    }
    interface ResizeVertical {
    }
    interface WtfIsThis {
    }
    interface IntrinsicElements {
        "keep-bounderies": KeepBounderies;
        "max-size": MaxSize;
        "min-size": MinSize;
        "resize-configs": ResizeConfigs;
        "resize-dedicated-rules": ResizeDedicatedRules;
        "resize-display-options": ResizeDisplayOptions;
        "resize-functions": ResizeFunctions;
        "resize-global-rules": ResizeGlobalRules;
        "resize-horizontal": ResizeHorizontal;
        "resize-vertical": ResizeVertical;
        "wtf-is-this": WtfIsThis;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "keep-bounderies": LocalJSX.KeepBounderies & JSXBase.HTMLAttributes<HTMLKeepBounderiesElement>;
            "max-size": LocalJSX.MaxSize & JSXBase.HTMLAttributes<HTMLMaxSizeElement>;
            "min-size": LocalJSX.MinSize & JSXBase.HTMLAttributes<HTMLMinSizeElement>;
            "resize-configs": LocalJSX.ResizeConfigs & JSXBase.HTMLAttributes<HTMLResizeConfigsElement>;
            "resize-dedicated-rules": LocalJSX.ResizeDedicatedRules & JSXBase.HTMLAttributes<HTMLResizeDedicatedRulesElement>;
            "resize-display-options": LocalJSX.ResizeDisplayOptions & JSXBase.HTMLAttributes<HTMLResizeDisplayOptionsElement>;
            "resize-functions": LocalJSX.ResizeFunctions & JSXBase.HTMLAttributes<HTMLResizeFunctionsElement>;
            "resize-global-rules": LocalJSX.ResizeGlobalRules & JSXBase.HTMLAttributes<HTMLResizeGlobalRulesElement>;
            "resize-horizontal": LocalJSX.ResizeHorizontal & JSXBase.HTMLAttributes<HTMLResizeHorizontalElement>;
            "resize-vertical": LocalJSX.ResizeVertical & JSXBase.HTMLAttributes<HTMLResizeVerticalElement>;
            "wtf-is-this": LocalJSX.WtfIsThis & JSXBase.HTMLAttributes<HTMLWtfIsThisElement>;
        }
    }
}
